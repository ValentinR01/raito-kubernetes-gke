name: Build and Deploy to GKE

on:
  push:
    branches: [ "develop" ]

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GAR_LOCATION: europe-west1
  GKE_CLUSTER: raito-cluster   
  GKE_ZONE: europe-west1 
  DEPLOYMENT_NAME: raito-app-:$(date +%s)
  REPOSITORY: raito-docker-repo
  IMAGE: static-site

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
        export_default_credentials: true


    - name: Configure Docker Client
      run: gcloud auth configure-docker europe-west1-docker.pkg.dev --quiet
      

    - name: Build Docker image
      run: 
        docker build -f front.dockerfile . --tag front-container:$(date +%s) &&
        docker build -f backend.dockerfile . --tag backend-container:$(date +%s) &&
        docker image ls
        
    # Push the Docker image to Google Artifact Registry
    - name: Publish
      run: |-
        echo $GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA &&
        docker push europe-west1-docker.pkg.dev/raito-369114/raito-docker-repo/front-container
        
        
        
        
        
        
        
    # Set up kustomize
    - name: Set up Kustomize
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize
    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |-
        # replacing the image name in the k8s template
        ./kustomize edit set image LOCATION-docker.pkg.dev/PROJECT_ID/REPOSITORY/IMAGE:TAG=$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA
        ./kustomize build . | kubectl apply -f -
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide
